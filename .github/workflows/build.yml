name: build n191

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          mkdir dist
          BIN_NAME=n191-${{ matrix.target }}
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/n191.exe dist/$BIN_NAME.exe
            7z a $BIN_NAME.zip dist/$BIN_NAME.exe
          else
            cp target/${{ matrix.target }}/release/n191 dist/$BIN_NAME
            tar -cJf $BIN_NAME.tar.xz -C dist $BIN_NAME
          fi
        shell: bash

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.tar.xz
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
